{
  "swagger": "2.0",
  "info": {
    "title": "blog/blogpb/blog_service.proto",
    "version": "version not set"
  },
  "tags": [
    {
      "name": "BlogService"
    }
  ],
  "consumes": [
    "application/json"
  ],
  "produces": [
    "application/json"
  ],
  "paths": {
    "/v1/samblog": {
      "post": {
        "operationId": "BlogService_CreateBlog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blogCreateBlogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blog.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blog.authorId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blog.title",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blog.content",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BlogService"
        ]
      },
      "patch": {
        "summary": "a specified ID does not exist",
        "operationId": "BlogService_UpdateBlog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blogUpdateBlogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blog.id",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blog.authorId",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blog.title",
            "in": "query",
            "required": false,
            "type": "string"
          },
          {
            "name": "blog.content",
            "in": "query",
            "required": false,
            "type": "string"
          }
        ],
        "tags": [
          "BlogService"
        ]
      }
    },
    "/v1/samblog/list": {
      "get": {
        "operationId": "BlogService_ListBlog",
        "responses": {
          "200": {
            "description": "A successful response.(streaming responses)",
            "schema": {
              "type": "object",
              "properties": {
                "result": {
                  "$ref": "#/definitions/blogListBlogResponse"
                },
                "error": {
                  "$ref": "#/definitions/rpcStatus"
                }
              },
              "title": "Stream result of blogListBlogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "tags": [
          "BlogService"
        ]
      }
    },
    "/v1/samblog/{blogId}": {
      "get": {
        "operationId": "BlogService_ReadBlog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blogReadBlogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blogId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BlogService"
        ]
      },
      "delete": {
        "summary": "a specified ID does not exist",
        "operationId": "BlogService_DeleteBlog",
        "responses": {
          "200": {
            "description": "A successful response.",
            "schema": {
              "$ref": "#/definitions/blogDeleteBlogResponse"
            }
          },
          "default": {
            "description": "An unexpected error response.",
            "schema": {
              "$ref": "#/definitions/rpcStatus"
            }
          }
        },
        "parameters": [
          {
            "name": "blogId",
            "in": "path",
            "required": true,
            "type": "string"
          }
        ],
        "tags": [
          "BlogService"
        ]
      }
    }
  },
  "definitions": {
    "blogBlog": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string"
        },
        "authorId": {
          "type": "string"
        },
        "title": {
          "type": "string"
        },
        "content": {
          "type": "string"
        }
      }
    },
    "blogCreateBlogResponse": {
      "type": "object",
      "properties": {
        "blog": {
          "$ref": "#/definitions/blogBlog"
        }
      }
    },
    "blogDeleteBlogResponse": {
      "type": "object",
      "properties": {
        "blogId": {
          "type": "string"
        }
      }
    },
    "blogListBlogResponse": {
      "type": "object",
      "properties": {
        "blog": {
          "$ref": "#/definitions/blogBlog"
        }
      }
    },
    "blogReadBlogResponse": {
      "type": "object",
      "properties": {
        "blog": {
          "$ref": "#/definitions/blogBlog"
        }
      }
    },
    "blogUpdateBlogResponse": {
      "type": "object",
      "properties": {
        "blog": {
          "$ref": "#/definitions/blogBlog"
        }
      }
    },
    "protobufAny": {
      "type": "object",
      "properties": {
        "@type": {
          "type": "string"
        }
      },
      "additionalProperties": {}
    },
    "rpcStatus": {
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "message": {
          "type": "string"
        },
        "details": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/protobufAny"
          }
        }
      }
    }
  }
}
